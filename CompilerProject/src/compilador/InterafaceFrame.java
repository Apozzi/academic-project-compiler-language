package compilador;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StringReader;
import java.io.Writer;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.DefaultCaret;
import lexico.Constants;
import lexico.LexicalError;
import lexico.Lexico;
import lexico.ScannerConstants;
import lexico.SemanticError;
import lexico.Semantico;
import lexico.Sintatico;
import lexico.SyntaticError;
import lexico.Token;
import utils.Compiler;

/**
 *
 * @author casa
 */
public class InterafaceFrame extends javax.swing.JFrame {
    String fileName = "";
    /**
     * Creates new form InterafaceFrame
     */
    public InterafaceFrame() {
        initComponents();
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compilador");
        setMinimumSize(new java.awt.Dimension(900, 620));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compiladori1/img/sendfile_envia_13691.png"))); // NOI18N
        jButton1.setText("Open [ctrl-o]");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compiladori1/img/newfile_85903.png"))); // NOI18N
        jButton2.setText("New [ctrl-n]");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compiladori1/img/About_icon-icons.com_55974.png"))); // NOI18N
        jButton3.setText("About [F1]");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTextArea2.setBackground(new java.awt.Color(102, 102, 102));
        jTextArea2.setColumns(20);
        jTextArea2.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea2.setRows(5);
        jTextArea2.setAutoscrolls(false);
        jTextArea2.setMargin(null);
        jTextArea2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextArea2KeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea2);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compiladori1/img/save_78935.png"))); // NOI18N
        jButton4.setText("Save  [ctrl-s]");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(102, 102, 102));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jTextArea1.setText("\n\n\n\n\n\n\n\n");
        jScrollPane1.setViewportView(jTextArea1);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compiladori1/img/copy_4221.png"))); // NOI18N
        jButton5.setText("Copy  [ctrl-c]");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compiladori1/img/clipboard-paste-button_icon-icons.com_72805.png"))); // NOI18N
        jButton6.setText("Paste  [ctrl-p]");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compiladori1/img/fullcut_cut_scissors_4720.png"))); // NOI18N
        jButton7.setText("Cut  [ctrl-x]");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compiladori1/img/code_application_3283.png"))); // NOI18N
        jButton8.setText("Compile [F9]");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jTextPane1.setEditable(false);
        jTextPane1.setBackground(new java.awt.Color(102, 102, 102));
        jTextPane1.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTextPane1.setAutoscrolls(false);
        jTextPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTextPane1.setEnabled(false);
        jTextPane1.setFocusable(false);
        jScrollPane3.setViewportView(jTextPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(2, 2, 2)
                        .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filler2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(202, 202, 202)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)))))
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jTextArea2.paste();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        jTextArea2.cut();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jTextArea2.copy();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void open() {
        jTextArea1.setText("");
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivo textos", "txt", "text");
        fileChooser.setFileFilter(filter);
        int show = fileChooser.showOpenDialog(this);
        if (JFileChooser.APPROVE_OPTION == show) {
            File arquivo = fileChooser.getSelectedFile();
            fileName = arquivo.getName();
            String content = "";
            try {
                content = Files.readAllLines(Paths.get(arquivo.getAbsolutePath())).stream().collect(Collectors.joining("\r\n"));
            } catch (IOException ex) {
                Logger.getLogger(InterafaceFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            jLabel1.setText(arquivo.getAbsolutePath());
            jTextArea2.setText(content);   
        } 
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       open(); 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void about() {
        jTextArea1.setText("Criador: Anderson Rodrigo Pozzi\nDisciplina compiladores");
        JOptionPane.showMessageDialog(JOptionPane.getRootFrame(),"Criador: Anderson Rodrigo Pozzi\nDisciplina compiladores");
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        about();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void keyPress(java.awt.event.KeyEvent evt) throws IOException {
        if ((evt.getKeyCode() == KeyEvent.VK_F1)) {
             about();
        }
        
        if ((evt.getKeyCode() == KeyEvent.VK_F9)) {
             compile();
        }
        
        if ((evt.getKeyCode() == KeyEvent.VK_O) && ((evt.getModifiers() & KeyEvent.CTRL_MASK) != 0)) {
             open();
        }
        
        if ((evt.getKeyCode() == KeyEvent.VK_S) && ((evt.getModifiers() & KeyEvent.CTRL_MASK) != 0)) {
             save();
        }
        
        if ((evt.getKeyCode() == KeyEvent.VK_N) && ((evt.getModifiers() & KeyEvent.CTRL_MASK) != 0)) {
             newBtn();
        }
    }
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        try {
            keyPress(evt);
        } catch (IOException ex) {
            Logger.getLogger(InterafaceFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formKeyPressed

    private void jTextArea2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea2KeyPressed
        try {
            keyPress(evt);
        } catch (IOException ex) {
            Logger.getLogger(InterafaceFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
         
   
    }//GEN-LAST:event_jTextArea2KeyPressed

    private void newBtn() {
        jTextArea2.setText("");
        jTextArea1.setText("");
        jLabel1.setText("");
    } 
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        newBtn();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void compile() throws IOException {
        if ("".equals(fileName)) {
            JOptionPane.showMessageDialog(this, "Salve o arquivo para prosseguir com processo de compilação", "Info", JOptionPane.INFORMATION_MESSAGE);
            if (!save()) {
               return;
            }
        }
        System.out.println("compile action.");
        if ("".equals(jTextArea2.getText().trim())) {
            jTextArea1.setText("Nenhum programa para compilar na área reservada para mensagens.");
            return;
        }
        jTextArea1.setText("");
        Lexico lex = new Lexico(new StringReader(jTextArea2.getText()));
        Lexico lex2 = new Lexico(new StringReader(jTextArea2.getText()));
        Sintatico sintatico = new Sintatico();
        Semantico semantico = new Semantico();
        Token token = null;
        try {
            sintatico.parse(lex, semantico);
            jTextArea1.append("Programa compilado.");
            System.out.print(Compiler.getCode());
            if ("".equals(fileName)) {
                fileName = "new";
            }
            FileOutputStream fileOutput = new FileOutputStream(fileName + ".il");
            try (Writer writer = new BufferedWriter(new OutputStreamWriter(
              fileOutput, "utf-8"))) {
                //Escreve no arquivo
                writer.write(Compiler.getCode());
             }
            try {
               File file = new File(System.getProperty("user.dir"));
               ProcessBuilder p = new ProcessBuilder("ilasm",  fileName + ".il");
               p.directory(file);
               p.start();

            } catch(Exception ex) {
                System.out.println(ex.getMessage());
            }
          
            Compiler.clean();
        } catch (LexicalError ex) {
            jTextArea1.setText("");
            // Verifica se é erro de simbolo inválido
            boolean incomplete = ex.getMessage() == ScannerConstants.SCANNER_ERROR[13] || ex.getMessage() == ScannerConstants.SCANNER_ERROR[4];
            if (ex.getMessage() == ScannerConstants.SCANNER_ERROR[0] || incomplete) {
                Compiler.clean();
                onSimbolError(ex, incomplete);
                return;
            }
            jTextArea1.append(ex.getMessage()
                .replace("{numero}", String.valueOf(getLineFromPosition(ex.getPosition()))));
            Compiler.clean();
            return;
        } catch (SyntaticError ex) {
            jTextArea1.setText("");
            // Verifica se é erro de simbolo inválido
            String lexema = getEncontrado(sintatico.currentToken.getId(), sintatico.currentToken.getLexeme());
            jTextArea1.append(("Erro na linha {numero} – encontrado " + lexema + " " + ex.getMessage())
                .replace("{numero}", String.valueOf(getLineFromPosition(ex.getPosition()))));
        } catch (SemanticError ex) {
           jTextArea1.setText("");
   
            jTextArea1.append(("Erro na linha {numero} – " + ex.getMessage())
                .replace("{numero}", String.valueOf(getLineFromPosition(ex.getPosition()))));
        }
        Compiler.clean();
    }
    
    private String getEncontrado(int id, String lex) {
        if (lex.equals("$")) {
           return "fim de programa";
        }
       if (Constants.t_constante_inteira == id) {
           return "constante int";
        } else if (Constants.t_constante_real == id) {
           return "constante float";
        } else if (Constants.t_constante_caractere == id) {
           return "constante caractere";
       } else 
        return lex;
    }
    
   
    
    private void onSimbolError(LexicalError ex, boolean incomplete) {
        String msg = ex.getMessage();
        msg = msg.replace("{numero}", String.valueOf(getLineFromPosition(ex.getPosition())));
        String pt2 = jTextArea2.getText().split("")[ex.getPosition()];
        if (incomplete) {
            pt2 += jTextArea2.getText().split("")[ex.getPosition() + 1]; 
        }
        msg = msg.replace("{simbolo}",pt2);
        jTextArea1.append(msg);
    }
    
    private int getLineFromPosition(int pos) {
        String line = jTextArea2.getText().substring(0, pos); ;
        return line.length() - line.replace("\n", "").length() + 1;
    }
    
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        try {
            compile();
        } catch (IOException ex) {
            Logger.getLogger(InterafaceFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private boolean save() {
        if (jLabel1.getText() == "") {
                JFileChooser fileChooser = new JFileChooser();
                int resposta = fileChooser.showSaveDialog(this);
                if (JFileChooser.APPROVE_OPTION == resposta) {
                
                File file = new File(fileChooser.getSelectedFile() + ".txt");
                fileName = fileChooser.getSelectedFile().getName();
                try (
                    BufferedReader reader = new BufferedReader(new StringReader(jTextArea1.getText()));
                    PrintWriter writer = new PrintWriter(new FileWriter(file)); ) {
                        reader.lines().forEach(line -> writer.println(line));
                } catch (IOException ex) {
                    Logger.getLogger(InterafaceFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                jLabel1.setText(file.getAbsolutePath());
               
                JOptionPane.showMessageDialog(this, "Arquivo salvo", "Arquivo salvo", JOptionPane.INFORMATION_MESSAGE);
                return true;
            }
            } else {
                File file = new File(jLabel1.getText());
                try (
                    BufferedReader reader = new BufferedReader(new StringReader(jTextArea1.getText()));
                    PrintWriter writer = new PrintWriter(new FileWriter(file)); ) {
                        reader.lines().forEach(line -> writer.println(line));
                } catch (IOException ex) {
                    Logger.getLogger(InterafaceFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        return false;
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

            save();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextArea2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea2KeyTyped
        // TODO add your handling code here:
         jTextArea2.getLineCount();
         String lines= "";
         int col = (31 - jTextArea2.getLineCount() < 0) ? 31 - jTextArea2.getLineCount() : 0;
         for (int i = -col; i < jTextArea2.getLineCount(); i++) {
            lines+= (i + 1) + "\n";
        }
         jTextPane1.setText(lines);
    }//GEN-LAST:event_jTextArea2KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterafaceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterafaceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterafaceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterafaceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterafaceFrame().setVisible(true);
         
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
